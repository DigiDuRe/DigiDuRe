DROP TABLE IF EXISTS "01_clerus_bio";

CREATE TABLE "01_clerus_bio" (
  "clerus_id" INTEGER,                              --Unique identifyer and primary key in the database
  "first_name" VARCHAR(255),                        --First name
  "infix" VARCHAR(255),                             --infix of name
  "surname" VARCHAR(255),                           --surname
  "initials" VARCHAR(255),                          --initials
  "sex" VARCHAR(255),                               --sex
  "info_family" VARCHAR(255),                       --information about familiy relations. For instance son of (Z.V. Zoon Van or brother of etc.)
  "birth_place" VARCHAR(255),                       --place of birth
  "birth_place_id" INTEGER,                         --this field contains an autogenerated primary key to allow adding alternative spellings for the placename which is stored in 21_birth_alt_place
  "birth_year" INTEGER,                             --year of birth
  "birth_date_exact" VARCHAR(255),                  --exact date of birth ddmmyyyy
  "birth_year_accuracy" VARCHAR(255),               --comments about the accuracy of the birth date e.g. circa , ca. etc.
  "baptism_place" VARCHAR(255),                     --place of baptism
  "baptism_place_id" INTEGER,                       --this field contains an autogenerated primary key to allow adding alternative spellings for the placename which is stored in 22_baptism_alt_place
  "baptism_year" INTEGER,                           --year in which the baptism took place
  "baptism_date_exact" VARCHAR(255),                --exact date of the baptism
  "baptism_date_accuracy" VARCHAR(255),             --comments about the accuracy of the baptism date e.g. circa , ca. etc.
  "death_place" VARCHAR(255),                       --place of death
  "death_place_id" INTEGER,                         --this field contains an autogenerated primary key to allow adding alternative spellings for the placename which is stored in 23_death_alt_place
  "death_year" INTEGER,                             --year of death
  "death_date_exact" VARCHAR(255),                  --exact date of death
  "death_date_accuracy" VARCHAR(255),               --comments about the accuracy of the death date e.g. circa , ca. etc.
  "burried_place" VARCHAR(255),                     --place where someone is burried
  "burried_place_id" INTEGER,                       --this field contains an autogenerated primary key to allow adding alternative spellings for the placename which is stored in 24_burried_alt_place
  "funeral_year" INTEGER,                           --year of funeral
  "funeral_date_exact" VARCHAR(255),                --exact date of funeral as string
  "funeral_data_accuracy" VARCHAR(255),             --comments about the accuracy of the funeral date e.g. circa , ca. etc.
  "remarks" VARCHAR(255),                           --remarks about the individual
  "remarks_source" VARCHAR(255),                    --information about from which dataset the data originates and  additional remarks about the source (e.g volume/ book)
);

DROP TABLE IF EXISTS "02_drc_org";

CREATE TABLE "02_drc_org" (
  "drc_id" INTEGER,                                 --Key that corresponds with the clerus_id in 01_clerus_bio. Since DRC is used as basis for CLERUS we decided to use the same value for CLERUS as used in DRC. Therefore the drc_id can be directly connected with the clerus_id.
  "original_input_drc" TEXT                         --The original input text string from DRC
);

DROP TABLE IF EXISTS "11_clerus_alt_name";

CREATE TABLE "11_clerus_alt_name" (
  "clerus_id" INTEGER,                              --foreign key to 01_clerus_bio
  "alt_name" TEXT,                                  --alternative name in case it is not specified
  "alt_first_name" VARCHAR(255),                    --alternative first name
  "alt_infix" VARCHAR(255),                         --alternative infix
  "alt_surname" VARCHAR(255),                       --alternative surname
  "alt_info_family" VARCHAR(255),                   --alternative information about the family
  "remarks_alt_name" TEXT,                          --remarks about the alternative name
  "alt_initials" VARCHAR(255)                       --alternative initials
);

DROP TABLE IF EXISTS "12_clerus_role";

CREATE TABLE "12_clerus_role" (
  "clerus_id" INTEGER,                              --foreign key to 01_clerus_bio
  "role_type" VARCHAR(255),                         --the type of role
  "role_place" TEXT,                                --the placename of the role
  "role_place_id" INTEGER,                          --this field contains an autogenerated primary key to allow adding alternative spellings for the placename which is stored in 25_role_alt_place
  "role_classis_code" INTEGER,                      --the classis code of the role
  "role_classis" VARCHAR(255),                      --the classis of the role
  "role_parish" VARCHAR(255),                       --the parish name of the role
  "role_province" VARCHAR(255),                     --the name of the province of the role
  "role_region" VARCHAR(255),                       --the name of the region of the rol
  "role_start_year" INTEGER,                        --start year of the role
  "role_start_date_exact" VARCHAR(255),             --exact starting date of the role
  "role_start_year_accuracy" VARCHAR(255),          --comments about the accuracy of starting data of the role e.g. circa , ca. etc.
  "role_end_year" INTEGER,                          --end year of the role
  "role_end_date_exact" VARCHAR(255),               --exact end date of the role
  "role_end_year_accuracy" VARCHAR(255),            --comments about the accuracy of starting data of the role e.g. circa , ca. etc.
  "role_residence_place" VARCHAR(255),              --place of residence for the role
  "role_residence_place_id" INTEGER,                --this field contains an autogenerated primary key to allow adding alternative spellings for the placename which is stored in 26_residence_alt_place
  "role_remarks" TEXT,                              --remarks about the role
  "role_remarks_source" VARCHAR(255),               --information about from which dataset the data originates and  additional remarks about the source (e.g volume/ book)
  "role_source_id" INTEGER                          --in order to relate the information about the role to the original dataset, a field to store this information is created (e.g. DM id)
);

DROP TABLE IF EXISTS "21_birth_alt_place";
DROP TABLE IF EXISTS "22_baptism_alt_place";
DROP TABLE IF EXISTS "23_death_alt_place";
DROP TABLE IF EXISTS "24_burried_alt_place";
DROP TABLE IF EXISTS "25_role_alt_place";
DROP TABLE IF EXISTS "26_residence_alt_place";

CREATE TABLE "21_birth_alt_place" (
  "birth_place_id" INTEGER DEFAULT 0,             --foreign key for birth place
  "alt_place_name" VARCHAR(255)                   --alternative spelling for place name
);

CREATE TABLE "22_baptism_alt_place" (
  "baptized_place_id" INTEGER DEFAULT 0,          --foreign key for baptism place
  "alt_place_name" VARCHAR(255)                   --alternative spelling for place name
);

CREATE TABLE "23_death_alt_place" (
  "death_place_id" INTEGER DEFAULT 0,             --foreign key for death place
  "alt_place_name" VARCHAR(255)                   --alternative spelling for place name
);

CREATE TABLE "24_burried_alt_place" (
  "burried_place_id" INTEGER DEFAULT 0,           --foreign key for burried place
  "alt_place_name" VARCHAR(255)                   --alternative spelling for place name
);

CREATE TABLE "25_role_alt_place" (
  "role_place_id" INTEGER DEFAULT 0,              --foreign key for role place
  "alt_place_name" VARCHAR(255)                   --alternative spelling for place name
);

CREATE TABLE "26_residence_alt_place" (
  "role_place_residence_id" INTEGER DEFAULT 0,    --foreign key for residence place
  "alt_place_name" VARCHAR(255)                   --alternative spelling for place name
);

DROP TABLE IF EXISTS "03_clerus_exam";

CREATE TABLE "03_clerus_exam" (
  "clerus_id" VARCHAR(255),                         --Unique identifyer and primary key in the database
  "prep_exam_classis" VARCHAR(255),                 --The classis (administrative entity) where the preperation exam took place
  "prep_exam_date_exact" VARCHAR(255),              --exact date of preperation exam ddmmyyyy
  "prep_exam_year" VARCHAR(255),                    --the year the preperation exam took place
  "prop_exam_classis" VARCHAR(255),                 --The classis (administrative entity) where the proponent exam took place
  "prop_exam_date_exact" VARCHAR(255),              --the exact date of the exam to obtain the proponent status
  "prop_exam_date_year" INTEGER DEFAULT 0,          --year of the exam to obtain the proponent status
  "commendati_classis" VARCHAR(255),                --The classis (administrative entity) where the someone got the commendati status
  "commendati_classis_date_exact" INTEGER DEFAULT 0,--The exact date when someone got the commendati status
  "commendati_classis_year" INTEGER DEFAULT 0       --The year when someone got the commendati status
  "remarks_source" VARCHAR(255),                    --information about from which dataset the data originates
  "source_id" INTEGER,                              --in order to relate the information about the role to the original dataset, a field to store this information is created (e.g. keppel or boekzaallijst)
);